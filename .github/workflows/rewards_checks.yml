name: Rewards Checks

on:
  pull_request:
    types: [opened, synchronize]
    paths: # Only run on changes to the rewards app or dependencies.
      - "apps/rewards-app/**"
      - "packages/theme/**"
      - "packages/web3/**"
      - "packages/utils/**"
      - "packages/tailwind-config/**"
      - "packages/ui/**"
      - "tests/e2e-rewards/**"

env:
  NEXT_PUBLIC_BLUE_API_URL: ${{ vars.NEXT_PUBLIC_BLUE_API_URL }}
  NEXT_PUBLIC_REWARDS_API_URL: ${{ vars.NEXT_PUBLIC_REWARDS_API_URL }}
  NEXT_PUBLIC_REOWN_APP_ID: ${{ vars.NEXT_PUBLIC_REWARDS_REOWN_APP_ID }}
  PRIVATE_MAINNET_RPC: ${{ secrets.PRIVATE_MAINNET_RPC_URL }}
  NEXT_PUBLIC_BLUE_SERVICES_API: ${{ vars.NEXT_PUBLIC_BLUE_SERVICES_API }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  CI: true

jobs:
  Dockerize:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Setup
        uses: ./.github/actions/setup
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./apps/rewards-app/Dockerfile
          push: false
          build-args: |
            NEXT_PUBLIC_BLUE_API_URL=${{ vars.NEXT_PUBLIC_BLUE_API_URL }}
            NEXT_PUBLIC_REWARDS_API_URL=${{ vars.NEXT_PUBLIC_REWARDS_API_URL }}
            NEXT_PUBLIC_REOWN_APP_ID=${{ vars.NEXT_PUBLIC_REWARDS_REOWN_APP_ID }}
  Rewards-E2E:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Setup repo
        uses: ./.github/actions/setup
      - name: Install Foundry (includes anvil)
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - name: Extract Playwright version
        id: playwright-version
        shell: bash
        run: echo "PLAYWRIGHT_VERSION=$(jq -r '.devDependencies."@playwright/test"' tests/e2e-rewards/package.json)" >> $GITHUB_ENV
      - name: Cache Playwright
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install Playwright dependencies
        shell: bash
        run: pnpm --filter e2e-rewards exec playwright install --with-deps --only-shell
      - name: Generate API typings
        shell: bash
        run: pnpm --filter e2e-rewards gen:graphql
      - name: Run Playwright tests
        run: npx turbo test:e2e --filter=e2e-rewards
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: test-results
          path: tests/e2e-rewards/test-results
          retention-days: 30
